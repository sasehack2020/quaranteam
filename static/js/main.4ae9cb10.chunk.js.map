{"version":3,"sources":["components/AppMap.js","components/Landing.js","components/Quiz.js","components/Result.js","components/Cards.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["getData","url","a","fetch","response","json","Leaflet","Icon","Default","imagePath","AppMap","props","state","data","isLoading","centroid","hasGeo","this","setState","centers","reduce","acc","cur","idx","src","parseFloat","lat","lon","map","x","length","Spinner","Map","center","zoom","TileLayer","attribution","Marker","position","Popup","centername","address","Button","variant","href","Card","text","Body","Title","process","Component","React","Quiz","style","Form","as","method","symp","key","className","Check","type","id","label","name","Result","inf","Cards","e","target","value","class","alt","to","Group","controlId","Label","Control","form","onChange","logState","Object","keys","states","useQuery","URLSearchParams","useLocation","search","AMComponent","query","get","RComponent","routes","path","exact","main","HeaderComponent","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","route","index","children","Header","document","title","basename","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4ae9cb10.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Leaflet from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport {\r\n  Map,\r\n  TileLayer,\r\n  Marker,\r\n  Popup\r\n} from 'react-leaflet';\r\nimport '../map.css';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n// pull images from cdn instead of storing locally\r\nLeaflet.Icon.Default.imagePath = '//cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.4/images/';\r\n\r\nasync function getData(url) {\r\n\tconst response = await fetch(url);\r\n\treturn response.json()\r\n}\r\n\r\nexport default class AppMap extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { data: [], isLoading: true, centroid: [], hasGeo: true };\r\n    }\r\n\r\n    async componentWillMount() {\r\n        if (this.props.state == null) {\r\n            return this.setState({ hasGeo: false });\r\n        }\r\n        const centers = await getData(`https://sheetlabs.com/NCOR/covidtestcentersinUS?state=${this.props.state}`);\r\n        const centroid = centers.reduce((acc, cur, idx, src) => [acc[0]+parseFloat(cur.lat), acc[1]+cur.lon], [0, 0]).map(x => x/centers.length);\r\n        this.setState({ isLoading: false, data: centers, centroid: centroid });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.hasGeo) {\r\n            return (\r\n                <Card text=\"dark\">\r\n                    <Card.Body>\r\n                        <Card.Title>Please select a state first</Card.Title>\r\n                        <Button variant=\"secondary\" href={`${process.env.PUBLIC_URL}`}>Try again</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            );\r\n        }\r\n        if (!this.state.isLoading) {\r\n            return (\r\n                <Map center={this.state.centroid} zoom={4}>\r\n                    <TileLayer\r\n   \t\t        \t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n   \t\t        \t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n   \t\t      \t/>\r\n                    {this.state.data.map(json => {\r\n                        return (\r\n                            <Marker position={[parseFloat(json.lat), json.lon]}>\r\n                                <Popup>\r\n                                    <h3>{json.centername}</h3>\r\n                                    <h4>{json.address}</h4>\r\n                                    <Button variant=\"secondary\"><a href={json.url}>Schedule an appointment</a></Button>\r\n                                </Popup>\r\n                            </Marker>\r\n                        );\r\n                    })}\r\n                </Map>\r\n            );\r\n        }\r\n        else {\r\n            return <Spinner/>\r\n        }\r\n    }\r\n}","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel'\nexport default class Landing extends React.Component {\n\n\trender(){\n    return(\n\t\t<div className=\"carousel\">\n\t\t\t<Carousel>\n  \t\t\t<Carousel.Item>\n    <img\n      className=\"d-block w-100\"\n      src=\"https://allbusinesssystems.com/wp-content/uploads/2017/05/Exam-Room-Casegoods-1-Stance.jpg\"\n      alt=\"First Slide\"\n    />\n    <Carousel.Caption>\n      <h3>Take the Covid Quiz.</h3>\n      <p>Do you have COVID or the flu? Take the quiz to determine your next steps.</p>\n    </Carousel.Caption>\n  </Carousel.Item>\n  <Carousel.Item>\n    <img\n      className=\"d-block w-100\"\n      src=\"https://th.bing.com/th/id/OIP.Olot3z24rM7z8g-AytkHPgHaE7?pid=Api&rs=1\"\n      alt=\"Third slide\"\n    />\n\n    <Carousel.Caption>\n      <h3>Locate your nearest testing center.</h3>\n      <p>Want to know where you should get tested according to your location? Click here for your nearest testing center.</p>\n    </Carousel.Caption>\n  </Carousel.Item>\n  <Carousel.Item>\n    <img\n      className=\"d-block w-100\"\n      src=\"https://kathmandupathlab.com/wp-content/uploads/2017/11/lab4.jpg\"\n      alt=\"Third slide\"\n    />\n\n    <Carousel.Caption>\n      <h3>Drugs and their Side Effects.</h3>\n      <p>Worried about your prescribed drugs and their side effects? Click here for common side effects associated with your drug.</p>\n    </Carousel.Caption>\n  </Carousel.Item>\n</Carousel>\n</div>\n    );\n\t}\n}","import React from 'react';\nimport '../App.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nexport default class Quiz extends React.Component {\n  render(){\n      return (\n        <div style={{ 'padding': 20 }}>\n        <h1>Which of these symptoms do you have?</h1>\n        <Form as='form' method=\"POST\">\n          {['Body aches', 'Cough', 'Diarrhea', 'Fatigue', 'Fever/Chills/Shaking', 'Headache', 'Loss of taste or smell', 'Shortness of breath of difficulty breathing', 'Sneezing', 'Sore throat', 'Stuffy nose'].map(\n            (symp) =>\n            // lol simp\n            <div key={`${symp}`} className=\"mb-3\">\n              <Form.Check\n                type='checkbox'\n                id={`${symp}`}\n                label={`${symp}`}\n                name={`${symp}`}\n              />\n            </div>\n          )}\n          <Button variant=\"secondary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        </div>\n      );\n  }\n}","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class Result extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Card style={{ 'padding': 20 }}>\r\n                <Card.Body>\r\n                    <Card.Title>You likely have {this.props.inf}</Card.Title>\r\n                    <Button variant=\"secondary\">\r\n                        Email someone you know\r\n                    </Button>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport states from './states.json'\nimport { Link } from 'react-router-dom';\n\nexport default class Cards extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { state: null };\n  }\n\n  logState(e) {\n    this.setState({ state: e.target.value });\n  }\n\n\trender(){\n\t\treturn (\n\t\t\t<div class=\"card-deck\">\n  <div class=\"card\">\n    <img class=\"card-img-top\" src=\"https://allbusinesssystems.com/wp-content/uploads/2017/05/Exam-Room-Casegoods-1-Stance.jpg\" alt=\"Card image cap\"/>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Covid Quiz</h5>\n      <p class=\"card-text\">Do you want to know if you have COVID or just the flu? Take this quiz to find out.</p>\n      <Button variant=\"secondary\">\n        <Link to={'/quiz'}>\n          Take the quiz!\n        </Link>\n      </Button>\n    </div>\n  </div>\n  <div class=\"card\">\n    <img class=\"card-img-top\" src=\"https://th.bing.com/th/id/OIP.Olot3z24rM7z8g-AytkHPgHaE7?pid=Api&rs=1\" alt=\"Card image cap\"/>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Nearby Covid Testing Centers</h5>\n      <p class=\"card-text\">Do you want to get tested for COVID? Check here for the nearest testing center where you are located.</p>\n      <Form as='form' id=\"centers\">\n        <Form.Group controlId=\"state\">\n          <Form.Label>Choose your state</Form.Label>\n          <Form.Control as=\"select\" name=\"state\" id=\"state\" form=\"centers\" onChange={(e) => this.logState(e)}>\n            {Object.keys(states).map(name => <option value={states[name]}>{name}</option>)}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n      <Button variant=\"secondary\">\n        <Link to={`/map?state=${this.state.state}`}>\n          Go!\n        </Link>\n      </Button>\n    </div>\n  </div>\n  <div class=\"card\">\n    <img class=\"card-img-top\" src=\"https://kathmandupathlab.com/wp-content/uploads/2017/11/lab4.jpg\" alt=\"Card image cap\"/>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Drugs and Their Side Effects</h5>\n      <p class=\"card-text\">Are you concerned about the lasting side effects of your prescribed drug? Check here for your drug and its common side effects.</p>\n      <Button variant=\"secondary\">\n        not done yet\n      </Button>\n    </div>\n  </div>\n</div>\n    );\n\t}\n}\n\n","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport AppMap from './AppMap';\r\nimport Quiz from './Quiz';\r\nimport Result from './Result';\r\nimport Landing from './Landing';\r\nimport Cards from './Cards';\r\nimport { Nav } from 'react-bootstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  useLocation,\r\n  Link,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction AMComponent() {\r\n  let query = useQuery();\r\n\r\n  return <AppMap state={query.get('state')}/>;\r\n}\r\n\r\nfunction RComponent() {\r\n    let query = useQuery();\r\n\r\n    return <Result inf={query.get('inf')}/>;\r\n}\r\n\r\nvar routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        main: () => <Cards/>\r\n    },\r\n    {\r\n        path: '/map',\r\n        main: () => <AMComponent/>\r\n    },\r\n    {\r\n        path: '/quiz',\r\n        main: () => <Quiz/>\r\n    },\r\n    {\r\n        path: '/results',\r\n        main: () => <RComponent/>\r\n    }\r\n]\r\n\r\nfunction HeaderComponent() {\r\n    let query = useQuery();\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg='primary' expand=''>\r\n                <Navbar.Brand href={`${process.env.PUBLIC_URL}`}>\r\n                    <Link to={'/'}>\r\n                        Quaranteam\r\n                    </Link>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle style={{ 'backgroundColor': '#7DC242' }} aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav>\r\n                        <Nav.Link><Link to={'/'}>Home</Link></Nav.Link>\r\n                        <Nav.Link><Link to={`/map?state=${query.get('state')}`}>Map</Link></Nav.Link>\r\n                        <Nav.Link><Link to={'/quiz'}>Quiz</Link></Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            <Switch>\r\n                <div style={{ 'paddingTop': 20 }}>\r\n                    {routes.map((route, index) => (\r\n                        <Route\r\n                            key={index}\r\n                            path={route.path}\r\n                            exact={route.exact}\r\n                            children={<route.main/>}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Header() {\r\n    document.title = \"Quaranteam\";\r\n    return (\r\n        <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n            <HeaderComponent/>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport AppMap from './components/AppMap';\nimport Landing from './components/Landing';\nimport Header from './components/Header';\nimport Cards from './components/Cards';\nimport './bootstrap.css';\n\n\nfunction App() {\n  return (\n    <Header/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}